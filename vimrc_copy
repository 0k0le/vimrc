call plug#begin('~/.vim/plugged')

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'preservim/nerdtree'

call plug#end()

let mapleader=" "

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" " when indenting with '>', use 4 spaces width
set shiftwidth=4
" " On pressing tab, insert 4 spaces
set expandtab

noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

"let NERDTreeMapOpenInTab='<ENTER>'

"nnoremap <C-Left> :tabp<CR>
"nnoremap <C-Right> :tabn<CR>
"

set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup
"
" " Give more space for displaying messages.
set cmdheight=2
"
" " Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" " delays and poor user experience.
set updatetime=300
"
" " Don't pass messages to |ins-completion-menu|.
set shortmess+=c
"
" " Always show the signcolumn, otherwise it would shift the text each time
" " diagnostics appear/become resolved.
if has("patch-8.1.1564")
"   " Recently vim can merge signcolumn and number column into one
     set signcolumn=number
     else
       set signcolumn=yes
       endif
"
"       " Use tab for trigger completion with characters ahead and navigate.
"       " NOTE: Use command ':verbose imap <tab>' to make sure tab is not
"       mapped by
"       " other plugin before putting this into your config.
       inoremap <silent><expr> <TAB>
             \ pumvisible() ? "\<C-n>" :
                   \ <SID>check_back_space() ? "\<TAB>" :
                         \ coc#refresh()
                         inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
"
                         function! s:check_back_space() abort
                           let col = col('.') - 1
                             return !col || getline('.')[col - 1]  =~# '\s'
                             endfunction
